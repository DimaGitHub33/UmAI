reticulate::repl_python()
ridit.calc <- function(t) {
p.vector.list <- lapply(t, function(x) prop.table(table(x)))
names(p.vector.list) <- names(t)
s.vector.list <- vector('list', length(p.vector.list))
for (j in 1:length(p.vector.list)){
x <- p.vector.list[[j]]
s.vector.list[[j]] <- numeric(length(x))
s.vector.list[[j]][1] <- -sum(x[2:length(x)])
for (i in 2:length(x)){
s.vector.list[[j]][i] <- sum(x[1:(i-1)]) - (1-sum(x[1:i]))
}
names(s.vector.list[[j]]) <- names(p.vector.list[[j]])
}
names(s.vector.list) <- names(t)
t2 <- data.frame(matrix(nr=nrow(t), nc=ncol(t)))
names(t2) <- names(t)
for (i in 1:ncol(t)){
for (j in 1:nrow(t)){
t2[j, i] <- s.vector.list[[i]][names(s.vector.list[[i]]) == t[j, i]]
assign('F',t2, envir=globalenv())
}
}
}
reticulate::repl_python()
Fullcov = read.csv("x3.csv",header=TRUE)
library(readr)
x3 <- read_csv("UmAI/x3.csv")
View(x3)
getwd()
setwd("UmAI/")
Fullcov = read.csv("x3.csv",header=TRUE)
Fullcov
######################################################################
######################################################################
############################## PRIDIT ################################
######################################################################
######################################################################
######################################################################
####################### Function ridit.calc ##########################
######################################################################
ridit.calc <- function(t) {
p.vector.list <- lapply(t, function(x) prop.table(table(x)))
names(p.vector.list) <- names(t)
s.vector.list <- vector('list', length(p.vector.list))
for (j in 1:length(p.vector.list)){
x <- p.vector.list[[j]]
s.vector.list[[j]] <- numeric(length(x))
s.vector.list[[j]][1] <- -sum(x[2:length(x)])
for (i in 2:length(x)){
s.vector.list[[j]][i] <- sum(x[1:(i-1)]) - (1-sum(x[1:i]))
}
names(s.vector.list[[j]]) <- names(p.vector.list[[j]])
}
names(s.vector.list) <- names(t)
t2 <- data.frame(matrix(nr=nrow(t), nc=ncol(t)))
names(t2) <- names(t)
for (i in 1:ncol(t)){
for (j in 1:nrow(t)){
t2[j, i] <- s.vector.list[[i]][names(s.vector.list[[i]]) == t[j, i]]
assign('F',t2, envir=globalenv())
}
}
}
######################################################################
####################### Function iteracions ##########################
######################################################################
iteracions <- function(t){
#transposta de F
Ft <- t(F)
#creem el vector W0
W0 <- as.matrix(numeric(length(F)))
for(j in 1:length(F)){
W0[j] <- 1
}
S0 <- data.frame(as.matrix(F)%*%W0)
W1a <- as.matrix(Ft)%*%as.matrix(S0)
W1b <- norm(W1a, type="2")
W1 <- W1a/W1b
S1 <- data.frame(as.matrix(F)%*%W1)
condp1=1
iter <- 1
while (condp1 > 0){
iter <- iter+1
Wa <- as.matrix(Ft)%*%as.matrix(S1)
Wb <- norm(Wa, type="2")
W2 <- Wa/Wb
S2 <- data.frame(as.matrix(F)%*%W2)
W0 <- W1
W1 <- W2
S1 <- S2
if (W0[1,1] == W1[1,1] && W0[2,1] == W1[2,1])  {
condp1 =0
} else {
condp1=condp1+1
}
}
cat("\nIteracions= ", iter, "\n")
return(W2)
}
######################################################################
###################### Principal Components ##########################
######################################################################
### We check the interations with Principal Components
#ridit.calc(t)
CompPrinc <- function(t){
PCA <- princomp(F)
load <- as.vector(PCA$loadings[,1])
return(load)
}
##########################################################
# We do not do this by now
PCA <- princomp(F)
ridit.calc <- function(t) {
p.vector.list <- lapply(t, function(x) prop.table(table(x)))
names(p.vector.list) <- names(t)
s.vector.list <- vector('list', length(p.vector.list))
for (j in 1:length(p.vector.list)){
x <- p.vector.list[[j]]
s.vector.list[[j]] <- numeric(length(x))
s.vector.list[[j]][1] <- -sum(x[2:length(x)])
for (i in 2:length(x)){
s.vector.list[[j]][i] <- sum(x[1:(i-1)]) - (1-sum(x[1:i]))
}
names(s.vector.list[[j]]) <- names(p.vector.list[[j]])
}
names(s.vector.list) <- names(t)
t2 <- data.frame(matrix(nr=nrow(t), nc=ncol(t)))
names(t2) <- names(t)
for (i in 1:ncol(t)){
for (j in 1:nrow(t)){
t2[j, i] <- s.vector.list[[i]][names(s.vector.list[[i]]) == t[j, i]]
assign('F',t2, envir=globalenv())
}
}
}
Fullcov = read.csv("x3.csv",header=TRUE)
Fullcov
ridit.calc(Fullcov)
(F)
cl(F)
remove(F)
ridit.calc(Fullcov)
(Winf <- iteracions(Fullcov))
Winf
A <- rep(c("Si", "No"), c(2,3))
B <- rep(c("Si", "No", "Si"), c(1,1,3))
C <- rep(c("S�","No", "S�", "No"), c(1,1,2,1))
D <- rep(c("S�", "No", "S�"), c(2, 1, 2))
(x <- data.frame(A, B, C, D))
ridit.calc(x)
(F)
(Winf <- iteracions(x))
(Compr_PCA <- CompPrinc(x))
vectC <- matBvectC(x)
(Winf <- iteracions(x))
